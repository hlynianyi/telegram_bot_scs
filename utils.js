const fs = require("fs");

async function addPathToProductsDetails(filePath) {
  let products = JSON.parse(fs.readFileSync(filePath, "utf8"));

  async function addDetails(product) {
    let content = [];

    content.push({
      tag: "figcaption",
      children: [capitalizeFirstLetter(product.category), " - ", product.name],
    });
    content.push({
      tag: "p",
      children: [`–¶–µ–Ω—ã —É–∫–∞–∑–∞–Ω—ã –±–µ–∑ üîã –ê–ö–ë üîã!`],
    });
    product.variants.forEach((variant, idx) => {
      content.push({
        tag: "p",
        children: [
          `–ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è ‚Ññ${idx + 1}:\n`,
          `–¶–µ–Ω–∞: üíµ${variant.price} —Ä—É–±.\n`,
          `–°–∫–æ—Ä–æ—Å—Ç—å: üöÄ${variant.speed} –∫–º/—á.\n`,
          `–ú–æ—Ç–æ—Ä –∫–æ–ª–µ—Å–æ: ${variant.engine}w.\n`,
          `–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä: ${variant.controller}w.\n`,
        ],
      });
    });

    const page = await ph.createPage(
      TELEGRAPH_TOKEN,
      "Small Shop China",
      content
    );
    return page.url;
  }

  for (const product of products) {
    product.detailsPath = await addDetails(product);
    console.log("2 @ product details :>> ", product);
  }

  fs.writeFileSync("products.json", JSON.stringify(products, null, 2));
}

function capitalizeFirstLetter(string) {
  if (!string) return string;
  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
}

function loadProducts() {
  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–∞
  if (fs.existsSync("products.json")) {
    try {
      const data = fs.readFileSync("products.json", "utf8");
      if (data.trim().length === 0) {
        return []; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤, –µ—Å–ª–∏ —Ñ–∞–π–ª –ø—É—Å—Ç
      }
      const products = JSON.parse(data);
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
      return products.map((product) => {
        if (!Array.isArray(product.variants)) {
          product.variants = [];
        }
        return product;
      });
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ products.json:", error);
      return []; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞
    }
  }
  return [];
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª
function saveUserList(userList) {
  fs.writeFileSync("users.json", JSON.stringify(userList, null, 2));
}

module.exports = {
  capitalizeFirstLetter,
  addPathToProductsDetails,
  loadProducts,
  saveUserList,
};
